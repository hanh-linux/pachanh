#!/bin/bash

set -e
set -o errtrace

trap func_exit EXIT

# Exit function
func_exit() {
printf "<< Exiting\n"
}


# Function for printing help
help() {
echo "tavinfo - Project Tavorites installed packages search tool"
echo "Usage: tavinfo [options] [package]"
echo "Options"
echo "--help                                    Print this message"
echo "--version                                 Print version"
echo "--config=<path to config>                 Use a alternative config"
echo "--type=[info,filelist,filelist]           See type of information"
echo "--sysroot=<path>                          Change root directory"
echo "For any questions, please consider asking on GitHub: https://github.com/hanhlinux/pactav"
exit
}

# Function for searching packages
search() {
for pkg in $package; do
### Check if the package is installed
 if [[ -d $infodir/$pkg ]]; then
### Check if the specified information file exists
  for file in $files; do
   [ ! -f $infodir/$pkg/$file ] && echo ">>> Specified file not found! Exiting..." && exit
   echo ">> Printing $file..."
   cat $infodir/$pkg/$file
  done
 else
  echo ">>> Package not found! Exiting..."
  exit
 fi
done
}

# Get the command line
command="$*"
[ -z "$command" ] && echo ">>> No package specified! Please use 'tavinfo --help' for more information" && exit

# Parse the command line
for x in $command; do

case $x in 
"--help") help;;
"--config"=*) 	config=$(echo "$x" | cut -d "=" -f2); source $config;;
"--type"=*) 	files=$(echo "$x" | cut -d "=" -f2 | sed 's/,/ /g');;
"--sysroot"=*) 	override_sysroot=$(echo "$x" | cut -d "=" -f2);;
"--version")    echo "$version";exit;;
--*) 		echo ">>> Unknown option: $x. Ignoring...";;
*) 		package="$package $x";;
esac

done

# Get some variables
[ ! -z "$config" ] && [ ! -f "$config" ] && echo ">>> Configuration file not found!" && exit 1
[ -z "$config" ] && config="/home/user/mussel/sysroot/etc/tav.conf"
source $config

if [ ! -z "$override_sysroot" ]; then 
 [ ! -d "$override_sysroot" ] && echo ">>> $override_sysroot not found!" && exit 1
 sysroot=$override_sysroot
fi
[ -z "$sysroot" ] && sysroot="/home/user/mussel/sysroot/"

infodir="$sysroot/var/lib/pactav/system/"
[ -z "$files" ] && files="info filelist header"

# Run the functions above
search
