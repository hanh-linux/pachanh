set -e

help() {
echo "tavbuild - Project Tavorites packages builder"
echo "Usage: tavbuild [options]"
echo "Options"
echo "--help					Print this message"
echo "--config=<path to config>			Use a alternative config"
echo "--buildfile=<path to buildfile>		Use a alternative build file"
echo "--downloader=<command>			Use command to install"
echo "--clean					Clean all current work and package directory"
echo "--no-unpack				Use current work directory"
echo "--repack					Make a package using current work directory"
exit
}

archive_pkg(){
pkg_tarball="$name"-"$ver".tavbuild.tar.gz

echo "Generating information..."

info_pkgdir="$info_dir/$name"
info_file=$info_pkgdir/info
info_filelist=$info_pkgdir/filelist

mkdir -p $info_pkgdir
echo "Name: $name" >> $info_file
echo "Version: $ver" >> $info_file
echo "Description: $desc" >> $info_file
echo "Depends: " $depend >> $info_file
echo "Homepage: $home" >> $info_file

echo "Generating filelist..."
cd $pkgdir
find * | tee $info_filelist
remove_files="bin sbin lib lib64 usr usr/lib usr/lib64 usr/bin usr/sbin usr/share boot dev etc home mnt opt proc root run tmp var"
for x in $remove_files; do
sed 's/\<$x\>//g' -i $info_filelist
done

echo "Compressing package..."
tar -cJvf $tavdir/$pkg_tarball *

echo "Package created!" $pkg_tarball 
}
no_unpack=0
repack=0

source ${PREFIX}/etc/tavbuild.conf

command="$*"
for x in $command; do

case $x in
"--help") help; exit;;
"--config"=*) config=$(echo "$x" | cut -d "=" -f 2) && source $config;;
"--buildfile"=*) buildfile=$(echo "$x" | cut -d "=" -f 2);;
"--downloader"=*) downloader=$(echo "$x" | cut -d "=" -f 2); echo $downloader;;
"--clean") clean=1;;
"--no-unpack") no_unpack=1;;
"--repack")  repack=1;;
"--"*) echo "Invalid option";exit;;
*) 
esac

done

[ -z $buildfile ] && buildfile=buildtav
if [ ! -f $buildfile ]; then
echo "Build file not found!"
exit
fi

source $buildfile

pkg_command=$(cat "$buildfile" | grep make-pkg | sed 's+()++g' | sed 's+{++g')
export grep_unpack=$(cat $buildfile | grep unpack-pkg | cut -d "(" -f 1)
export grep_compile=$(cat $buildfile | grep compile-pkg | cut -d "(" -f 1)

if [ -z "$downloader" ]; then
echo "Download command not found!"
exit
fi

if [ "$clean" == 1 ]; then
no_unpack=0
rm -rf $pkgdir $workdir
fi

mkdir -p $pkgdir $workdir

echo $workdir
if [ ! -z "$source" ]; then

for need_file in $source; do

wget -N $need_file

done

fi


if [ -z "$grep_unpack" ]; then

no_unpack=1

fi 


if [ -z "$grep_compile" ]; then

repack=1

fi
echo $no_unpack $repack
if [ "$no_unpack" == 0 ]; then
unpack-pkg
fi

if [ "$repack" == 0 ]; then
compile-pkg
fi

for repack_command in $(echo $pkg_command); do

rm -rf $pkgdir && mkdir $pkgdir
eval $repack_command
archive_pkg

done
