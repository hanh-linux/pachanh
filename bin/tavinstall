#!/bin/bash

set -e

## Function for printing help
help() {
echo "tavinstall - Project Tavorites packages installer"
echo "Usage: tavinstall [options] [action] package"
echo "Action"
echo "--sync					Sync database from remote"
echo "--search					Search for packages"
echo "--install					Install package <file>"
echo "--remove					Remove package"
echo "Options"
echo "--help					Print this message"
echo "--config=<path to config>			Use a alternative config"
echo "--sysroot=<path>				Change root directory"
echo "--downloader=<command>			Use another download command"
echo "--mirror-file=<path>                      Use specified mirror file"
echo "For any questions, please consider to go to the GitHub repository: https://github.com/hanhlinux/pactav"
exit
}

# Function for downloading database
sync_data(){
## Get some variable
dbdir="$sysroot/var/lib/remote/"
all_server=$(echo $(cat $mirror_file))

## Download the build files from remote server
cd $dbdir
for server in all_server
do
 eval $downloader $server/package-data.tar.gz

### Check if the database archive is available
 if [ -f package-data.tar.gz ]; then
  tar -xf package-data.tar.gz
  exit
 fi

done

}

# Function for installing package.
install_pkg() { 
for pkg in $package; do
### Check if the package exists
[ ! -f "$pkg" ] && echo "Package tarball not found!" && exit

### If the package is available, unpack the pre-install file for checking dependencies and filtering old files. 

 TEMP=$(mktemp -d)
 tar -C $TEMP -xf $pkg /pre-install
 source $TEMP/pre-install

### Check for dependencies
 if [ ! -z "$depends" ]; then
  for dep in $depends; do
   if [ ! -d $installed_infodir/$dep ]; then
   echo "$dep not found! Please compile and install it..."
   exit
   fi
  done
 fi

### Get package info directory
 tar -C $TEMP -xf $pkg $infodir

### Filter the old files
 oldfile=$sysroot/$infodir/filelist
 newfile=$TEMP/$infodir/filelist 

 if [ -f "$oldfile" ]; then
  difffiles=$(diff $oldfile $newfile | grep "<" | sed 's/<//g')
  
  for files in $(echo $difffiles); do 
   rm -rf $files
  done

 fi

### Unpack the package to $sysroot
 tar -C $sysroot -xf $pkg
 rm -rf $sysroot/pre-install $TEMP
done

}

remove_pkg() {
for pkg_dir in $package; do

 installed_pkg_filelist=$installed_infodir/$pkg_dir/filelist

### Check if the package is installed on the system
 if [ ! -f "$installed_pkg_filelist" ]; then 
  echo "Filelist not found!"
  exit
 fi

### Remove files (folders will be ignored because it may delete the necessary folders)
 for listfile in $(echo $(cat $installed_pkg_filelist)); do
  rm -f $listfile
 done

done
}

# Get the executed command. If the command comes with no more option, print the help.
command="$*"
[ -z "$command" ] && help && exit

# Parse the command line.
for x in $command; do

case $x in
"--help") help; exit;;
"--config"=*) 		config=$(echo "$x" | cut -d "=" -f 2);;
"--sysroot"=*) 		sysroot=$(echo "$x" | cut -d "=" -f 2);;
"--downloader"=*) 	override_downloader=$(echo "$x" | cut -d "=" -f 2);;
"--mirror-file"=*)      mirror_file=$(echo "$x" | cut -d "=" -f 2);;
"--sync")		sync=1;;
"--search")		search=1;;
"--install")		install=1;;
"--remove")		remove=1;;
"--"*)			echo "Invalid option"; help;exit;;
*)			package=$x;;	
esac

done

# Check for some variables
[ ! -z "$config"] && [ ! -f "$config" ] && echo "Configuration file not found!" && exit
[ -z "$config" ] && config="/etc/tav.conf"
source $config

[ ! -z "$override_downloader" ] && downloader="$override_downloader"
[ -z "$downloader" ] && echo "Download command not found" && exit

[ ! -z "$mirror_file" ] && [ ! -f "$mirror_file" ] && echo "Mirror file not found" && exit
[ -z "$mirror_file" ] && mirror_file="/etc/tavmirror"

[ -z "$sysroot" ] && sysroot="/"
installed_infodir="$sysroot/var/lib/pactav/system/"

# Execute the functions above
if [ "$sync" == 1 ]; then
 sync_data
fi

if [ "$install" == 1 ]; then
 remove=0
 install_pkg
fi

if [ "$remove" == 1 ]; then
 remove_pkg
fi
